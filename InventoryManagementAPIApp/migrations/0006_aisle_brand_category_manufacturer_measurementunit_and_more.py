# Generated by Django 4.2.14 on 2024-12-11 20:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("InventoryManagementAPIApp", "0005_business_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="Aisle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="MeasurementUnit",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("unit", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="ProductMedia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.FileField(null=True, upload_to="")),
            ],
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("date", models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="ProductHasStock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.FloatField()),
                ("remains", models.IntegerField()),
                ("total_qty", models.IntegerField()),
                ("measurement_unit_quantity", models.FloatField()),
                ("has_discount", models.BooleanField(default=False)),
                ("discount", models.FloatField()),
                (
                    "aisles",
                    models.ManyToManyField(to="InventoryManagementAPIApp.aisle"),
                ),
                (
                    "image_path",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="InventoryManagementAPIApp.productmedia",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="InventoryManagementAPIApp.product",
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="InventoryManagementAPIApp.stock",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="InventoryManagementAPIApp.brand",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="InventoryManagementAPIApp.category",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="manufacturer",
            field=models.ManyToManyField(to="InventoryManagementAPIApp.manufacturer"),
        ),
        migrations.AddField(
            model_name="product",
            name="measurement_unit",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="InventoryManagementAPIApp.measurementunit",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="InventoryManagementAPIApp.producttype",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="stock",
            field=models.ManyToManyField(
                through="InventoryManagementAPIApp.ProductHasStock",
                to="InventoryManagementAPIApp.stock",
            ),
        ),
    ]
